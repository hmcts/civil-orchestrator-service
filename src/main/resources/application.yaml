server:
  port: 9090

management:
  endpoint:
    health:
      show-details: "always"
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info, prometheus

springdoc:
  packagesToScan: uk.gov.hmcts.reform.civil.controllers
  writer-with-order-by-keys: true

#If you use a database then uncomment below lines and update db properties accordingly
spring:
  config:
    import: "optional:configtree:/mnt/secrets/civil/"
  application:
    name: Spring Boot Template
#  datasource:
#    driver-class-name: org.postgresql.Driver
#    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}${DB_OPTIONS:}
#    username: ${DB_USER_NAME}
#    password: ${DB_PASSWORD}
#    properties:
#      charSet: UTF-8
#    hikari:
#      minimumIdle: 2
#      maximumPoolSize: 10
#      idleTimeout: 10000
#      poolName: {to-be-defined}HikariCP
#      maxLifetime: 7200000
#      connectionTimeout: 30000
#  jpa:
#    properties:
#      hibernate:
#        jdbc:
#          lob:
#            # silence the 'wall-of-text' - unnecessary exception throw about blob types
#            non_contextual_creation: true

azure:
  application-insights:
    instrumentation-key: ${civil.AppInsightsInstrumentationKey:00000000-0000-0000-0000-000000000000}

idam:
  web:
    url: http://localhost:9002
  api:
    url: http://localhost:5000
  s2s-auth:
    url: http://localhost:4502
    totp_secret: AABBCCDDEEFFGGHH
    microservice: civil_service
  client:
    id: civil
    redirect_uri: https://localhost:9000/oauth2/callback
    secret: OOOOOOOOOOOOOOOO

rd_professional:
  api:
    url: http://localhost:8765

civil-service:
  create_claim:
    url: ${CREATE_BULK_CLAIM:http://localhost:4000/cases/caseworkers/jurisdictions/CIVIL/case-types/CIVIL/cases/}

os-postcode-lookup:
  url: https://api.os.uk/search/names/v1/find
  key: ${OS_POSTCODE_LOOKUP_API_KEY:}
  offline-mode: false



